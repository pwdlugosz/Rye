
// CONNECT //
CONNECT
{
	TEMP TO 'C:\Users\pwdlu_000\Documents\Data\TempDB';
};

// DOWNLOAD STOCK DATA //
FILE.DOWNLOAD
{
	URL = 'http://chart.finance.yahoo.com/table.csv?s=AAPL&a=1&b=1&c=2000&d=8&e=2&f=2016&g=d&ignore=.csv';
	PATH = 'C:\Users\pwdlu_000\Documents\RyeProjects\AAPL_Stock.txt';
};

FILE.DOWNLOAD
{
	URL = 'http://chart.finance.yahoo.com/table.csv?s=AAPL&a=1&b=1&c=2000&d=8&e=2&f=2016&g=v&ignore=.csv';
	PATH = 'C:\Users\pwdlu_000\Documents\RyeProjects\AAPL_Dividend.txt';
};

// IMPORT THE DATA //
CREATE TABLE TEMP.STOCK
{
	TRADE_DT AS DATE,
	OPEN_AMT AS DOUBLE,
	HIGH_AMT AS DOUBLE,
	LOW_AMT AS DOUBLE,
	CLOSE_AMT AS DOUBLE,
	VOLUME AS DOUBLE,
	ADJ_CLOSE_AMT AS DOUBLE
};

CREATE TABLE TEMP.DIVIDEND
{
	TRADE_DT AS DATE,
	DIVIDEND_AMT AS DOUBLE
};

FILE.IMPORT
{
	DATA = TABLE TEMP.STOCK;
	PATH = 'C:\Users\pwdlu_000\Documents\RyeProjects\AAPL_Stock.txt';
	DELIM = ',';
	SKIP = 1;
};

FILE.IMPORT
{
	DATA = TABLE TEMP.DIVIDEND;
	PATH = 'C:\Users\pwdlu_000\Documents\RyeProjects\AAPL_Dividend.txt';
	DELIM = ',';
	SKIP = 1;
};

// SORT EACH DATASET //
SORT
{
	FROM TEMP.STOCK;
};
BY
{
	TRADE_DT;
};

SORT
{
	FROM TEMP.DIVIDEND;
};
BY
{
	TRADE_DT;
};

// DO A JOIN OPPERATION //
JOIN
{
	FROM TEMP.STOCK AS A;
	FROM TEMP.DIVIDEND AS B;
	LEFT;
};
ON
{
	A.TRADE_DT = B.TRADE_DT;
};
APPEND
{
	NEW TEMP.STOCK_DIV;
	RETAIN
		'AAPL' AS TICKER,
		A.TRADE_DT,
		A.OPEN_AMT,
		A.CLOSE_AMT,
		A.LOW_AMT,
		A.HIGH_AMT,
		A.VOLUME,
		A.ADJ_CLOSE_AMT,
		B.DIVIDEND_AMT ?? 0D AS DIV_AMT;
};

// DO A SELECT //
SELECT
{
	FROM TEMP.STOCK_DIV AS T;
};
DECLARE
{
	LOCAL.RUN_DIV AS DOUBLE = 0D;
};
MAP
{
	LOCAL.RUN_DIV += T.DIV_AMT;
	APPEND
	{
		NEW TEMP.STOCK_ANALYTICS;
		RETAIN
			T.TICKER,
			T.TRADE_DT,
			T.OPEN_AMT,
			T.CLOSE_AMT,
			T.LOW_AMT,
			T.HIGH_AMT,
			T.VOLUME,
			T.ADJ_CLOSE_AMT + LOCAL.RUN_DIV AS ADJ_CLOSE_AMT,
			T.DIV_AMT == 0 ? (NULL -> DOUBLE) : T.DIV_AMT AS DIV_AMT,
			LOG(T.CLOSE_AMT) - LOG(T.OPEN_AMT) AS LOG_RETURN;
	};
};

// ROLL UP SOME DATA //
AGGREGATE
{
	FROM TEMP.STOCK_ANALYTICS AS T;
};
BY
{
	TICKER,
	YEAR(TRADE_DT) AS YEAR;
};
OVER
{

	COUNT(T.DIV_AMT) AS DIV_CNT,
	COUNT_NULL(T.DIV_AMT) AS NO_DIV_CNT,
	COUNT_ALL() AS TOTAL_CNT,
	SUM(T.DIV_AMT) AS DIV_SUM,
	
	MIN(T.ADJ_CLOSE_AMT) AS LOW_52,
	MAX(T.ADJ_CLOSE_AMT) AS HIGH_52,
	AVG(T.ADJ_CLOSE_AMT) AS AVG_CLOSE_AMT, 
	AVG(T.LOG_RETURN, T.VOLUME) AS AVG_RETURN,
	STDEV(T.LOG_RETURN, T.VOLUME) AS STDEV_RETURN,
	VAR(T.LOG_RETURN, T.VOLUME) AS VAR_RETURN,

	SLOPE(T.VOLUME, T.ADJ_CLOSE_AMT) AS BETA_VOL_CLOSE,
	INTERCEPT(T.VOLUME, T.ADJ_CLOSE_AMT) AS ALPHA_VOL_CLOSE,
	COVAR(T.VOLUME, T.ADJ_CLOSE_AMT) AS COVAR_VOL_CLOSE,
	CORR(T.VOLUME, T.ADJ_CLOSE_AMT) AS CORR_VOL_CLOSE,

	AVG(T.LOG_RETURN) WHERE T.LOG_RETURN > 0 AS UP_AVG_RETURN,
	AVG(T.LOG_RETURN) WHERE T.LOG_RETURN <= 0 AS DOWN_AVG_RETURN,

	FREQ(T.LOG_RETURN > 0) AS FREQ_UP_RETURN;

};
APPEND
{
	NEW TEMP.STOCK_AGG;
	RETAIN
		TICKER,
		YEAR,
		DIV_CNT,
		NO_DIV_CNT,
		TOTAL_CNT,
		DIV_SUM,
	
		LOW_52,
		HIGH_52,
		AVG_CLOSE_AMT, 
		AVG_RETURN,
		STDEV_RETURN,
		VAR_RETURN,

		BETA_VOL_CLOSE,
		ALPHA_VOL_CLOSE,
		COVAR_VOL_CLOSE,
		CORR_VOL_CLOSE,

		UP_AVG_RETURN,
		DOWN_AVG_RETURN,

		FREQ_UP_RETURN,
		DIV_SUM / AVG_CLOSE_AMT AS DIV_YIELD;

};

// PRINT OUR DATA //
SELECT
{
	FROM TEMP.STOCK_AGG AS T;
};
MAP
{
	PRINT T.*;
};

FILE.EXPORT
{
	DATA = TABLE TEMP.STOCK_AGG;
	PATH = 'C:\Users\pwdlu_000\Documents\RyeProjects\AAPL_Summary.txt';
	DELIM = TAB;
};

