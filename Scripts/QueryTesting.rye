CONNECT
{
	TEMP TO 'C:\Users\pwdlu_000\Documents\Rye Projects\Temp';
};

SYSTEM.SET_SEED { SEED = 1979; };

CREATE TABLE TEMP.TEMP_A
{
	KEY_A AS INT,
	KEY_B AS INT,
	VAL_GROUPER AS STRING
};

CREATE TABLE TEMP.TEMP_B
{
	KEY_A AS INT,
	KEY_B AS INT,
	VAL_X AS DOUBLE,
	VAL_Y AS DOUBLE
};

DECLARE
{
	TICKS AS INT = 0;
	X AS DOUBLE = 0D;
};

FOR TICKS = 0 TO 100000 - 1
DO
{
	
	X = RAND_NUM(-100D, 100D);

	APPEND
	{
		TEMP.TEMP_A;
		RETAIN
			TICKS / 100 AS KEY_A,
			TICKS % 100 AS KEY_B,
			RAND_STRING(1, 8) AS VAL_GROUPER
		;
	};

	APPEND
	{
		TEMP.TEMP_B;
		RETAIN
			TICKS / 100 AS KEY_A,
			TICKS % 100 AS KEY_B,
			X AS VAL_X,
			X * 0.50 + 100D + RAND_NUM(-10D, 10D) AS VAL_Y
		;
	};

};


JOIN
{
	FROM TEMP.TEMP_A AS A;
	FROM TEMP.TEMP_B AS B;
};
ON
{
	A.KEY_A = B.KEY_A;
	A.KEY_B = B.KEY_B;
};
APPEND
{
	NEW TEMP.TEMP_JOIN;
	RETAIN
		A.KEY_A,
		A.KEY_B,
		A.VAL_GROUPER,
		B.VAL_X,
		B.VAL_Y
	;
	SORT VAL_GROUPER;
	DUMP 'C:\Users\pwdlu_000\Documents\Rye Projects\Flat Files\Dump_Join.csv', ',';
};


UPDATE
{
	FROM TEMP.TEMP_JOIN;
	WHERE VAL_X <= 5D AND VAL_X >= -5D;
};
SET
{
	VAL_X = (NULL -> DOUBLE);
	VAL_Y = (NULL -> DOUBLE);
};


AGGREGATE
{
	FROM TEMP.TEMP_JOIN;
};
BY
{
	VAL_GROUPER;
};
OVER
{
	COUNT(VAL_X) AS RECORD_CNT,
	COUNT_NULL(VAL_X) AS NULL_RECORD_CNT,
	COUNT_ALL() AS TOTAL_RECORD_CNT,
	SUM(VAL_X) AS X_TOTAL,
	SUM(VAL_Y) AS Y_TOTAL,
	MIN(VAL_X) AS X_MIN,
	MIN(VAL_Y) AS Y_MIN,
	MAX(VAL_X) AS X_MAX,
	MAX(VAL_Y) AS Y_MAX,
	AVG(VAL_X) AS X_AVG,
	AVG(VAL_Y) AS Y_AVG,
	STDEV(VAL_X) AS X_STDEV,
	STDEV(VAL_Y) AS Y_STDEV,
	COVAR(VAL_X, VAL_Y) AS XY_COVAR,
	CORR(VAL_X, VAL_Y) AS XY_CORR,
	INTERCEPT(VAL_X, VAL_Y) AS XY_INTERCEPT,
	SLOPE(VAL_X, VAL_Y) AS XY_SLOPE
	;
};
APPEND
{
	NEW TEMP.TEMP_AGG;
	RETAIN
		OUT.*
	;
	SORT VAL_GROUPER;
	DUMP 'C:\Users\pwdlu_000\Documents\Rye Projects\Flat Files\Dump_Agg.csv', ',';
};




